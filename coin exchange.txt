n = int(input())

if(n<=4):
    count = n
else:
    n2s = 0
    a = []
    for i in range(n):
        a.append(1)
    count = 1
    print(a,count)
    fpos = len(a)-1
    while(n2s<round(n/3)):
        a.remove(a[0])
        a.remove(a[0])
        a.insert(0,2)
        n2s+=1
        ipos = 0
        
        count+=1
        print(a,count,'added 2')
        if(n2s==1):
            if(a ==a[::-1]):
                while(ipos<fpos-1):
                    a[ipos],a[ipos+1]=a[ipos+1],a[ipos]
                    ipos+=1
                    count+=1
                    print(a,count)
            else:
                while(ipos<fpos-1):
                    a[ipos],a[ipos+1]=a[ipos+1],a[ipos]
                    ipos+=1
                    count+=1
                    print(a,count)
            fpos = fpos - 3
            
        else:
            if(a ==a[::-1]):
                while(ipos<fpos-1):
                    a[ipos],a[ipos+1]=a[ipos+1],a[ipos]
                    ipos+=1
                    count+=2
                    print(a,count)
            else:
                count+=1
                while(ipos<fpos-1):
                    a[ipos],a[ipos+1]=a[ipos+1],a[ipos]
                    ipos+=1
                    count+=2
                    print(a,count)
            fpos = fpos - 3
print(count)
______________________________________________________________________________
find the coin change with [1,2] note that 2 cannot be at the adajecent place like[2,2]
find all the possible cout comes.

6 #input

[1, 1, 1, 1, 1, 1] 1

[2, 1, 1, 1, 1] 2 added 2

[1, 2, 1, 1, 1] 3

[1, 1, 2, 1, 1] 4

[1, 1, 1, 2, 1] 5

[1, 1, 1, 1, 2] 6

[2, 1, 1, 2] 7 added 2

[1, 2, 1, 2] 9

9 #output
-------------------------------------
9

[1, 1, 1, 1, 1, 1, 1, 1, 1] 1

[2, 1, 1, 1, 1, 1, 1, 1] 2 added 2

[1, 2, 1, 1, 1, 1, 1, 1] 3

[1, 1, 2, 1, 1, 1, 1, 1] 4

[1, 1, 1, 2, 1, 1, 1, 1] 5

[1, 1, 1, 1, 2, 1, 1, 1] 6

[1, 1, 1, 1, 1, 2, 1, 1] 7

[1, 1, 1, 1, 1, 1, 2, 1] 8

[1, 1, 1, 1, 1, 1, 1, 2] 9

[2, 1, 1, 1, 1, 1, 2] 10 added 2

[1, 2, 1, 1, 1, 1, 2] 12

[1, 1, 2, 1, 1, 1, 2] 14

[1, 1, 1, 2, 1, 1, 2] 16

[1, 1, 1, 1, 2, 1, 2] 18

[2, 1, 1, 2, 1, 2] 19 added 2

[1, 2, 1, 2, 1, 2] 22

22
--------------------------------------
10

[1, 1, 1, 1, 1, 1, 1, 1, 1, 1] 1

[2, 1, 1, 1, 1, 1, 1, 1, 1] 2 added 2

[1, 2, 1, 1, 1, 1, 1, 1, 1] 3

[1, 1, 2, 1, 1, 1, 1, 1, 1] 4

[1, 1, 1, 2, 1, 1, 1, 1, 1] 5

[1, 1, 1, 1, 2, 1, 1, 1, 1] 6

[1, 1, 1, 1, 1, 2, 1, 1, 1] 7

[1, 1, 1, 1, 1, 1, 2, 1, 1] 8

[1, 1, 1, 1, 1, 1, 1, 2, 1] 9

[1, 1, 1, 1, 1, 1, 1, 1, 2] 10

[2, 1, 1, 1, 1, 1, 1, 2] 11 added 2

[1, 2, 1, 1, 1, 1, 1, 2] 13

[1, 1, 2, 1, 1, 1, 1, 2] 15

[1, 1, 1, 2, 1, 1, 1, 2] 17

[1, 1, 1, 1, 2, 1, 1, 2] 19

[1, 1, 1, 1, 1, 2, 1, 2] 21

[2, 1, 1, 1, 2, 1, 2] 22 added 2

[1, 2, 1, 1, 2, 1, 2] 25

[1, 1, 2, 1, 2, 1, 2] 27

27
--------------------------------------------------------------------------------------------









        